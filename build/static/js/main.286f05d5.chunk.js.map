{"version":3,"sources":["components/ChatInput.js","components/ChatMessage.js","firebase.js","components/Chat.js","components/Login.js","components/Header.js","data/SidebarData.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["ChatInput","sendMessage","useState","input","setInput","Container","InputContainer","onChange","e","target","value","type","placeholder","SendButton","onClick","preventDefault","styled","div","button","Send","SendIcon","span","ChatMessage","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Chat","user","channelId","useParams","channel","setChannel","messages","setMessages","useEffect","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","Header","Channel","ChannelName","name","ChannelInfo","ChannelDetails","Info","MessageContainer","length","index","text","userImage","timestamp","payload","Timestamp","now","photo","add","console","log","InfoOutlinedIcon","Login","props","Content","SlackImg","src","SignInButton","signInWithPopup","then","result","newUser","displayName","photoURL","localStorage","setItem","JSON","stringify","setUser","catch","error","alert","message","img","signOut","Main","SearchContainer","Search","UserContainer","UserImage","alt","Name","sidebarItemsData","icon","Sidebar","history","useHistory","WorkSpaceContainer","NewMessage","MainChannels","item","MainChannelItem","ChannelsContainer","NewChannelsContainer","promptName","prompt","ChannelsList","rooms","id","push","App","setRooms","parse","getItem","className","removeItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.286f05d5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport SendIcon from '@material-ui/icons/Send';\n\nfunction ChatInput({ sendMessage }) {\n\n    const [input, setInput] = useState(\"\");\n\n    const send = (e) => {\n        e.preventDefault();\n        if(!input) return;\n        sendMessage(input)\n        setInput(\"\")\n    }\n\n\n\n  return (\n    <Container>\n      <InputContainer>\n      <form>\n          <input \n          onChange={(e) => setInput(e.target.value)}\n          value={input}\n          type='text' \n          placeholder='Message here...' \n          />\n          <SendButton \n            type=\"submit\"\n            onClick={send}>\n              <Send />\n          </SendButton>\n      </form>\n      </InputContainer>\n    </Container>\n  );\n}\n\nexport default ChatInput;\n\nconst Container = styled.div`\npadding-left: 20px;\npadding-right: 20px;\npadding-bottom: 24px;\n`\n\nconst InputContainer = styled.div`\nborder: 1px solid #8D8D8E;\nborder-radius: 4px;\n\nform {\n    display: flex;\n    height: 42px;\n    align-items: center;\n    padding-left: 10px;\n    input {\n        flex: 1;\n        border: none;\n        font-size: 13px;\n    }\n\n    input:focus {\n        outline: none;\n    }\n}\n`\n\nconst SendButton = styled.button`\nbackground: #007a5a;\nborder-radius: 2px;\nwidth: 32px;\nheight: 32px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-right: 5px;\ncursor: pointer;\nborder: none;\n\n.MuiSvgIcon-root {\n    width: 18px;\n}\n\n:hover {\n    background: #148567;\n}\n`\n\nconst Send = styled(SendIcon)`\ncolor: #D9D9D9;\n`","import React from 'react';\nimport styled from 'styled-components';\n\nfunction ChatMessage({ text, name, image, timestamp }) {\n  return (\n    <Container>\n      <UserAvatar>\n          <img src={image} alt=''/>\n      </UserAvatar>\n      <MessageContent>\n          <Name>\n              {name}\n              <span>{new Date(timestamp.toDate()).toUTCString()}</span>\n          </Name>\n          <Text>\n              {text}\n          </Text>\n      </MessageContent>\n    </Container>\n  );\n}\n\nexport default ChatMessage;\n\nconst Container = styled.div`\npadding: 8px 20px;\ndisplay: flex;\nalign-items: center;\n`\n\nconst UserAvatar = styled.div`\nwidth: 36px;\nheight: 36px;\nborder-radius: 2px;\noverflow: hidden;\nmargin-right: 8px;\n\nimg {\n    width: 100%;\n}\n`\n\nconst MessageContent = styled.div`\ndisplay: flex;\nflex-direction: column;\n`\n\nconst Name = styled.span`\nfont-weight: 900;\nfont-size: 15px;\nline-height: 1.4;\nspan {\n    margin-left: 8px;\n    font-weight: 400;\n    color: rgba(97, 96, 97);\n    font-size: 13px;\n}\n`\n\nconst Text = styled.span``","import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC6zQasPnTAunXW4QyakGs-0KIVu9Nzm5c\",\n    authDomain: \"slack-build-9c7d4.firebaseapp.com\",\n    projectId: \"slack-build-9c7d4\",\n    storageBucket: \"slack-build-9c7d4.appspot.com\",\n    messagingSenderId: \"857373290865\",\n    appId: \"1:857373290865:web:016b5dc2bd884eee1f46d0\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export {auth, provider}\n  export default db;\n\n ","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport ChatInput from './ChatInput';\nimport ChatMessage from './ChatMessage';\nimport db from '../firebase';\nimport { useParams } from 'react-router-dom';\nimport firebase from 'firebase';\n\n\nfunction Chat({ user }) {\n\n  let { channelId } = useParams();\n  const [ channel, setChannel ] = useState();\n  const [ messages, setMessages ] = useState([]);\n\n  const getMessages = () => {\n    db.collection('rooms')\n    .doc(channelId)\n    .collection('messages')\n    .orderBy('timestamp', 'asc')\n    .onSnapshot((snapshot) => {\n      let messages = snapshot.docs.map((doc) => doc.data());\n      setMessages(messages);\n    })\n  }\n\n  const sendMessage = (text) => {\n    if(channelId) {\n      let payload = {\n        text: text,\n        timestamp: firebase.firestore.Timestamp.now(),\n        user: user.name,\n        userImage: user.photo\n      }\n\n      db.collection(\"rooms\").doc(channelId).collection('messages').add(payload);\n\n      console.log(payload);\n    }\n  }\n\n  const getChannel = () => {\n    db.collection('rooms')\n    .doc(channelId)\n    .onSnapshot((snapshot) => {\n      setChannel(snapshot.data());\n    })\n  }\n\n  useEffect(() => {\n    getChannel();\n    getMessages();\n  }, [channelId]);\n\n  return (\n    <Container>\n      <Header>\n        <Channel>\n          <ChannelName>\n            # {channel && channel.name}\n          </ChannelName>\n          <ChannelInfo>\n            Company-wide announcements and work-based matters\n          </ChannelInfo>\n        </Channel>\n        <ChannelDetails>\n          <div>\n            Details\n          </div>\n          <Info />\n        </ChannelDetails>\n      </Header>\n      <MessageContainer>\n        {\n          messages.length > 0 && \n          messages.map((data, index) => {\n            <ChatMessage \n               text={data.text}\n               name={data.user}\n               image={data.userImage}\n               timestamp={data.timestamp}\n            />\n\n          })\n        }\n      </MessageContainer>\n      <ChatInput sendMessage={sendMessage} />\n    </Container>\n   \n  );\n}\n\nexport default Chat;\n\nconst Container = styled.div`\ndisplay: grid;\ngrid-template-rows: 38px minmax(0, 1fr);\nmin-height: 0;\n`\n\nconst Channel = styled.div``\n\nconst ChannelDetails = styled.div`\ndisplay: flex;\nalign-items: center;\ncolor: #606060;\n`\n\nconst ChannelName = styled.div`\nfont-weight: 700;\n`\n\nconst ChannelInfo = styled.div`\nfont-weight: 400;\ncolor: #606060;\nfont-size: 13px;\nmargin-top: 8px;\n`\n\nconst Info = styled(InfoOutlinedIcon)`\nmargin-left: 10px;\n`\n\n\nconst Header = styled.div`\npadding-left: 20px;\npadding-right: 20px;\ndisplay: flex;\nalign-items: center;\nborder-bottom: 1px solid rgba(83, 39, 83, 131);\njustify-content: space-between;\n`\n\nconst MessageContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\noverflow-y: scroll;\n`\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { auth, provider } from '../firebase';\n\nfunction Login(props) {\n  const signIn = () => {\n    auth.signInWithPopup(provider)\n    .then((result) => {\n      const newUser = {\n        name: result.user.displayName,\n        photo: result.user.photoURL,\n      }\n      localStorage.setItem('user', JSON.stringify(newUser));\n      props.setUser(newUser);\n      \n    })\n    .catch((error) => {\n      alert(error.message)\n    })\n  }\n\n\n  return (\n    <Container>\n      <Content>\n        <SlackImg src=\"https://assets.stickpng.com/images/5cb480cd5f1b6d3fbadece79.png\" />\n        <h1>Sign in Slack</h1>\n        <SignInButton onClick={() => signIn()}>\n          Sign In With Google\n        </SignInButton>\n        </Content>\n    </Container>\n  );\n}\n\nexport default Login;\n\nconst Container = styled.div`\nwidth: 100%;\nheight: 100vh;\nbackground-color: #f8f8f8;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`\n\nconst Content = styled.div`\nbackground: white;\npadding: 100px;\nborder-radius: 5px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nbox-shadow: 0 1px 3px rgb(0 0 0 / 12%), 0 1px 2px rgb(0 0 0 /24%);\n`\n\nconst SlackImg = styled.img`\nheight: 100px;\n`\n\nconst SignInButton = styled.button`\nmargin-top: 50px;\nbackground-color: #0a8d48;\ncolor: white;\nborder: none;\nheight: 40px;\nborder-radius: 4px;\ncursor: pointer;\nfont-size: 15px;\n`\n","import React from 'react';\nimport styled from 'styled-components';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nfunction Header({ user, signOut }) {\n  return (\n    <Container>\n      <Main>\n        <AccessTimeIcon />\n        <SearchContainer>\n          <Search>\n            <input type='text' placeholder='Search...' />\n          </Search>\n        </SearchContainer>\n        <HelpOutlineIcon />\n      </Main>\n       <UserContainer> \n         <Name>\n           {user.name}\n         </Name>\n         <UserImage onClick={signOut}>\n           <img src={user.photo ? user.photo : \"https://i.imgur.com/6VBx3io.png\"} alt=\"\" />\n         </UserImage>\n      </UserContainer>\n    </Container>\n  );\n}\n\nexport default Header;\n\nconst Container = styled.div`\nbackground-color: #350d36;\ncolor: white;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nposition: relative;\nz-index: 10;\nbox-shadow: 0 1px 0 0 rgb(255 255 255 / 10%);\n`\n\nconst Main = styled.div`\ndisplay: flex;\nmargin-right: 16px;\nmargin-left: 16px;\n`\n\nconst SearchContainer = styled.div`\nmin-width: 400px;\nmargin-left: 16px;\nmargin-right: 16px;\n`\n\nconst Search = styled.div`\nbox-shadow: inset 0 0 0 1px rgb(104 74 104);\nwidth: 100%;\nborder-radius: 6px;\ndisplay: flex;\nalign-items: center;\n\ninput {\n  background-color: transparent;\n  border: none;\n  padding-left: 8px;\n  padding-right: 8px;\n  color: white;\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\ninput:focus {\n  outline: none;\n}\n`\n\nconst UserContainer = styled.div`\ndisplay: flex;\nalign-items: center;\npadding-right: 16px;\nposition: absolute;\nright: 0;\n\n`\n\nconst Name = styled.div` \npadding-right: 16px;\n`\n\nconst UserImage = styled.div` \nwidth: 28px;\nheight: 28px;\nborder: 2px solid white;\nborder-radius: 3px;\ncursor: pointer;\n\nimg {\n  width: 100%;\n}\n`\n","import MessageIcon from '@material-ui/icons/Message';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport PeopleIcon from '@material-ui/icons/People';\nimport AppsIcon from '@material-ui/icons/Apps';\n\n\nexport const sidebarItemsData = [\n    {\n        icon: <MessageIcon />,\n        text: \"Thread\"\n    },\n    {\n        icon: <InboxIcon />,\n        text: \"All DMs\"\n    },\n    {\n        icon: <DraftsIcon />,\n        text: \"Mentions & Reactions\"\n    },\n    {\n        icon: <BookmarkBorderIcon />,\n        text: \"Save Items\"\n    },\n    {\n        icon: <PeopleIcon />,\n        text: \"Peoples & Groups\"\n    },\n    {\n        icon: <AppsIcon />,\n        text: \"More\"\n    }\n]","import React from 'react';\nimport styled from 'styled-components';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { sidebarItemsData } from '../data/SidebarData';\nimport AddIcon from '@material-ui/icons/Add';\nimport db from '../firebase';\nimport { useHistory } from 'react-router-dom';\n\n\nfunction Sidebar(props) {\n\n  const history = useHistory();\n\n  const goToChannel = (id) => {\n    if(id) {\n      console.log(id);\n      history.push(`/room/${id}`)\n    }\n  }\n\n  const addChannel = () => {\n    const promptName = prompt('Enter channel name');\n    if(promptName){\n      db.collection('rooms').add({\n        name: promptName\n      })\n    }\n  }\n\n\n  return (\n    <Container>\n      <WorkSpaceContainer>\n        <Name>\n          CleverProgrammer\n        </Name>\n        <NewMessage>\n          <AddCircleOutlineIcon />\n        </NewMessage>\n      </WorkSpaceContainer>\n      <MainChannels>\n        {\n          sidebarItemsData.map(item => (\n            <MainChannelItem>\n                {item.icon}\n                {item.text}\n            </MainChannelItem>\n          ))\n        }\n        \n      </MainChannels>\n      <ChannelsContainer>\n        <NewChannelsContainer>\n          <div>\n            Channels\n          </div>\n          <AddIcon onClick={addChannel} />\n        </NewChannelsContainer>\n        <ChannelsList>\n          {\n            props.rooms.map(item => (\n              <Channel onClick={() => goToChannel(item.id)}>\n                 # {item.name}\n              </Channel>\n            ))\n          }\n        </ChannelsList>\n      </ChannelsContainer>\n    </Container>\n  );\n}\n\nexport default Sidebar;\n\nconst Container = styled.div`\nbackground: #3F0E40;\n\n`\n\nconst WorkSpaceContainer = styled.div`\ncolor: white;\nheight: 64px;\ndisplay: flex;\nalign-items: center;\npadding-left: 19px;\njustify-content: space-between;\nborder-bottom: 1px solid #532753;\n`\n\nconst Name = styled.div`\n\n`\n\nconst NewMessage = styled.div`\nwidth: 36px;\nheight: 36px;\nbackground: white;\ncolor: #3F0E40;\nfill: #3F0E40;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder-radius: 50%;\nmargin-right: 20px;\ncursor: pointer;\n`\n\nconst MainChannels = styled.div`\npadding-top: 20px;\n`\n\nconst MainChannelItem = styled.div`\ncolor: rgb(188,171,188);\ndisplay: grid;\ngrid-template-columns: 15% auto;\nheight: 28px;\nalign-items: center;\npadding-left: 19px;\ncursor: pointer;\n:hover {\n  background: #350D36;\n}\n`\n\nconst ChannelsContainer = styled.div`\ncolor: rgb(188,171,188);\nmargin-top: 10px;\n`\n\nconst NewChannelsContainer = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nheight: 28px;\npadding-left: 19px;\npadding-right: 12px;\n`\n\nconst ChannelsList = styled.div`\n`\n\nconst Channel = styled.div`\nheight: 20px;\ndisplay: flex;\nalign-items: center;\npadding-left: 19px;\ncursor: pointer;\n:hover {\n  background: #350D36;\n}\n`\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Chat from './components/Chat';\nimport Login from './components/Login';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport db from './firebase';\nimport { auth, provider } from './firebase';\n\n\nfunction App() {\n  const [rooms, setRooms] = useState([])\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n\n\n  const getChannels = () => {\n    db.collection('rooms').onSnapshot((snapshot) => {\n     setRooms(snapshot.docs.map((doc) => {\n      return { id: doc.id, name: doc.data().name }\n     }))\n    })\n  }\n\n  const signOut = () => {\n    auth.signOut().then(() => {\n      localStorage.removeItem('user');\n      setUser(null);\n    })\n  }\n\n  useEffect(() => {\n   getChannels();\n  }, []);\n\n  return (\n    <div className='App'>\n      <Router>\n        {\n          !user ?\n          <Login setUser={setUser} />\n          :\n        <Container>\n          <Header signOut={signOut} user={user} />\n          <Main>\n            <Sidebar rooms={rooms} />\n          <Switch>\n              <Route path='/room/:channelId'>\n                  <Chat user={user} />\n              </Route>\n              <Route path='/'>\n                Select or Create Channel\n              </Route>\n          </Switch>\n          </Main>\n        </Container>\n        }\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\nwidth: 100%;\nheight: 100vh;\ndisplay: grid;\ngrid-template-rows: 38px auto;\n`\n\nconst Main = styled.div`\ndisplay: grid;\ngrid-template-columns: 260px auto;`\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}